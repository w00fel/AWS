{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS Infrastructure Deployment for Cloudera Hadoop (RHEL 6.5)",
    "Parameters": {
        "ClusterLauncherType": {
            "Description": "EC2 instance type for the CDH Launcher Instance.",
            "Type": "String",
            "Default": "t2.large",
            "AllowedValues": [
                "t2.large",
                "m4.large",
                "m4.xlarge"
            ]
        },
        "ClusterManagerType": {
            "Description": "EC2 instance type for the CDH Manager Instance.",
            "Type": "String",
            "Default": "m4.xlarge",
            "AllowedValues": [
                "t2.large",
                "m4.large",
                "m4.xlarge"
            ]
        },
        "ClusterMasterType": {
            "Description": "EC2 instance type for the CDH Master Instance.",
            "Type": "String",
            "Default": "m4.large",
            "AllowedValues": [
                "t2.large",
                "m4.large",
                "m4.xlarge"
            ]
        },
        "ClusterWorkerType": {
            "Description": "EC2 instance type for the CDH Worker Instances.",
            "Type": "String",
            "Default": "m4.large",
            "AllowedValues": [
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "i2.xlarge"
            ]
        },
        "ClusterMasterCount": {
            "Description": "The number of CDH Cluster Master Instances to start.",
            "Type": "String",
            "Default": "1",
            "MinLength": "1",
            "MaxLength": "1",
            "AllowedPattern": "[0-9]"
        },
        "ClusterWorkerCount": {
            "Description": "The number of CDH Cluster Worker Instances to start.",
            "Type": "String",
            "Default": "3",
            "MinLength": "1",
            "MaxLength": "2",
            "AllowedPattern": "[0-9]+"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "SSHLocation": {
            "Description": "IP CIDR from which you access the CDH Launcher instance.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
        }
    },

    "Mappings": {
        "SubnetConfig" : {
            "VPC"    : { "CIDR" : "10.0.0.0/16" },
            "Public" : { "CIDR" : "10.0.0.0/24" }
        },
        "ClusterLauncherAMI": {
            "us-east-1":      { "AMI": "ami-00a11e68" },
            "us-west-1":      { "AMI": "ami-4b3f350e" },
            "us-west-2":      { "AMI": "ami-11125e21" },
            "eu-west-1":      { "AMI": "ami-04a00d73" },
            "eu-central-1":   { "AMI": "ami-008ebf1d" },
            "ap-northeast-1": { "AMI": "ami-abb682aa" },
            "ap-southeast-2": { "AMI": "ami-0d254837" },
            "ap-southeast-1": { "AMI": "ami-ce1f399c" },
            "sa-east-1":      { "AMI": "ami-df06b3c2" }
        }
    },

    "Resources": {
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "EnableDnsSupport"   : "true",
                "EnableDnsHostnames" : "true",
                "CidrBlock" : {
                     "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "CDH Cluster" }
                ]
            }
        },

        "PublicSubnet" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "CidrBlock" : {
                    "Fn::FindInMap" : [ "SubnetConfig", "Public", "CIDR" ]
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "CDH Cluster" }
                ]
            }
        },

        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    { "Key" : "Name", "Value" : "CDH Cluster" }
                ]
            }
        },

        "GatewayToInternet" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "InternetGatewayId" : { "Ref" : "InternetGateway" }
            }
        },

        "PublicRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [
                    { "Key" : "Name", "Value" : "CDH Cluster" }
                ]
            }
        },

        "PublicRoute" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "GatewayToInternet",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" }
            }
        },

        "PublicSubnetRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PublicSubnet" },
                "RouteTableId" : { "Ref" : "PublicRouteTable" }
            }
        },

        "PublicNetworkAcl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [
                    { "Key" : "Name", "Value" : "CDH Cluster" }
                ]
            }
        },

        "InboundTCPPublicNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "InboundUDPPublicNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
                "RuleNumber" : "150",
                "Protocol" : "17",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "OutboundTCPPublicNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "OutboundUDPPublicNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
                "RuleNumber" : "150",
                "Protocol" : "17",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "PublicSubnetNetworkAclAssociation" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PublicSubnet" },
                "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
            }
        },

        "SecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "CDH Cluster",
                "VpcId" : { "Ref" : "VPC" },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : { "Ref" : "SSHLocation" }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : { "Fn::FindInMap" : [ "SubnetConfig", "Public", "CIDR" ]}
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "123",
                        "ToPort"     : "123",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "7000",
                        "ToPort"     : "65535",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "Tags" : [
                    { "Key" : "Name", "Value" : "CDH Cluster" }
                ]
            }
        },

        "ClusterLauncherInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": { "Service": [ "ec2.amazonaws.com" ] },
                        "Action": [ "sts:AssumeRole" ]
                    }]
                },
                "Path": "/",
                "Policies": [ {
                    "PolicyName": "root",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:*",
                                    "ec2:Describe*",
                                    "ec2:AttachNetworkInterface",
                                    "ec2:AttachVolume",
                                    "ec2:CreateTags",
                                    "ec2:CreateVolume",
                                    "ec2:DeleteVolume",
                                    "ec2:RunInstances",
                                    "ec2:StartInstances",
                                    "ec2:CreateSecurityGroup",
                                    "ec2:CreatePlacementGroup",
                                    "ec2:CreateSnapshot",
                                    "*"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudformation:CreateStack",
                                    "cloudformation:DeleteStack",
                                    "cloudformation:DescribeStack",
                                    "cloudformation:EstimateTemplateCost",
                                    "cloudformation:ValidateTemplate",
                                    "cloudformation:DescribeStackEvents",
                                    "cloudformation:DescribeStackResource",
                                    "cloudformation:DescribeStackResources",
                                    "cloudformation:DescribeStacks"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateRole"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:PutRolePolicy"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:CreateInstanceProfile"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:AddRoleToInstanceProfile"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:PassRole"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:RevokeSecurityGroupEgress"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:AuthorizeSecurityGroupEgress"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:AuthorizeSecurityGroupIngress"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:CreateNetworkInterface"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:ModifyNetworkInterfaceAttribute"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            }
                        ]
                    }
                }]
            }
        },

        "ClusterLauncherProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ { "Ref": "ClusterLauncherInstanceRole" } ]
            }
        },

        "ClusterLauncherInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": { "config": { "files": {} } }
            },
            "Properties": {
                "InstanceType" : { "Ref" : "ClusterLauncherType" },
                "IamInstanceProfile": { "Ref": "ClusterLauncherProfile" },
                "KeyName"  : { "Ref" : "KeyName" },
                "ImageId"  : { "Fn::FindInMap": [ "ClusterLauncherAMI", { "Ref": "AWS::Region" }, "AMI" ] },
                "NetworkInterfaces" : [{
                    "GroupSet"                 : [{ "Ref" : "SecurityGroup" }],
                    "SubnetId"                 : { "Ref" : "PublicSubnet" },
                    "AssociatePublicIpAddress" : "true",
                    "DeleteOnTermination"      : "true",
                    "DeviceIndex"              : "0"
                }],
                "Tags" : [
                    { "Key" : "Name", "Value" : "CDH Cluster Launcher" },
                    { "Key" : "group", "Value" : "launcher" }
                ],
                "UserData": {
                    "Fn::Base64": { "Fn::Join": [ "", [
                        "#!/bin/bash ",
                        "\n",
                        "mkdir -p /home/ec2-user/cloudera/",
                        "\n",
                        "wget https://s3.amazonaws.com/cleo-cloudera-aws/scripts/download.sh ",
                        "--output-document=/home/ec2-user/cloudera/download.sh ",
                        "\n",
                        "wget https://s3.amazonaws.com/cleo-cloudera-aws/scripts/cfn-replace.sh ",
                        "--output-document=/home/ec2-user/cloudera/cfn-replace.sh ",
                        "\n",
                        "wget https://s3.amazonaws.com/cleo-cloudera-aws/scripts/bootstrap.sh ",
                        "--output-document=/home/ec2-user/cloudera/bootstrap.sh ",
                        "\n",
                        "wget https://s3.amazonaws.com/cleo-cloudera-aws/scripts/terminate.sh ",
                        "--output-document=/home/ec2-user/cloudera/terminate.sh ",
                        "\n",
                        "wget https://s3.amazonaws.com/cleo-cloudera-aws/scripts/cleanup.sh ",
                        "--output-document=/home/ec2-user/cloudera/cleanup.sh ",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cfn-replace.sh ",
                        "SUBNETID-CFN-REPLACE",
                        "=",
                        {
                            "Ref": "PublicSubnet"
                        },
                        " /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cfn-replace.sh ",
                        "SECURITYGROUPIDS-CFN-REPLACE",
                        "=",
                        {
                            "Ref": "SecurityGroup"
                        },
                        " /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cfn-replace.sh ",
                        "KEYNAME-CFN-REPLACE",
                        "=",
                        {
                            "Ref": "KeyName"
                        },
                        " /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cfn-replace.sh ",
                        "AMI-CFN-REPLACE",
                        "=",
                        {
                            "Fn::FindInMap": [
                                "ClusterLauncherAMI",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "AMI"
                            ]
                        },
                        " /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cfn-replace.sh ",
                        "MANAGER-TYPE-CFN-REPLACE",
                        "=",
                        {
                            "Ref": "ClusterManagerType"
                        },
                        " /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cfn-replace.sh ",
                        "MASTER-TYPE-CFN-REPLACE",
                        "=",
                        {
                            "Ref": "ClusterMasterType"
                        },
                        " /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cfn-replace.sh ",
                        "WORKER-TYPE-CFN-REPLACE",
                        "=",
                        {
                            "Ref": "ClusterWorkerType"
                        },
                        " /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cfn-replace.sh ",
                        "MASTER-COUNT-CFN-REPLACE",
                        "=",
                        {
                            "Ref": "ClusterMasterCount"
                        },
                        " /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cfn-replace.sh ",
                        "WORKER-COUNT-CFN-REPLACE",
                        "=",
                        {
                            "Ref": "ClusterWorkerCount"
                        },
                        " /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/download.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/cleanup.sh",
                        "\n",
                        "/bin/rm /home/ec2-user/cloudera/cleanup.sh",
                        "\n",
                        "/bin/sh /home/ec2-user/cloudera/bootstrap.sh",
                        "\n",
                        "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\" : \"SUCCESS\",",
                        "\"Reason\" : \"The AWS-Cloudera Cluster Launcher is ready.\",",
                        "\"UniqueId\" : \"Cluster Launcher Complete\",",
                        "\"Data\" : \"Done\"}' ",
                        "\"",
                        {
                            "Ref": "WebServerWaitHandle"
                        },
                        "\"\n"
                    ]]}
                }
            }
        },
        "WebServerWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WebServerWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "ClusterLauncherInstance",
            "Properties": {
                "Handle": {
                    "Ref": "WebServerWaitHandle"
                },
                "Timeout": "9000"
            }
        }
    },

    "Outputs" : {
        "VPCId" : {
            "Description" : "VPC Id of the Cluster VPC",
            "Value" :  { "Ref" : "VPC" }
        },
        "SubnetId" : {
            "Description" : "Subnet Id of the Cluster Subnet",
            "Value" :  { "Ref" : "PublicSubnet" }
        },
        "DNSName" : {
            "Description" : "DNS Name of the CDH Cluster Launcher instance",
            "Value" :  { "Fn::GetAtt" : ["ClusterLauncherInstance", "PublicDnsName"] }
        },
        "IPAddress" : {
            "Description" : "IP Address of the CDH Cluster Launcher instance",
            "Value" :  { "Fn::GetAtt" : ["ClusterLauncherInstance", "PublicIp"] }
        }
    }
}
